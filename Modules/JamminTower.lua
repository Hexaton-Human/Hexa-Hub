local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v99=0;local v100;while true do if (v99==1) then return v100;end if (v99==0) then v100=v5(v83,v19);v19=nil;v99=1;end end else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=0 -0 ;local v85;while true do if (v84==(0 -0)) then v85=(v31/((3 -1)^(v32-(2 -1))))%(2^(((v33-(620 -(555 + 64))) -(v32-(1 + 0))) + (932 -(857 + 74)))) ;return v85-(v85%((2477 -1908) -(367 + 201))) ;end end else local v86=(1067 -((185 -(32 + 85)) + 997))^(v32-1) ;return (((v31%(v86 + v86))>=v86) and (928 -(214 + 713))) or 0 ;end end local function v21() local v34=0 + 0 ;local v35;while true do if (v34==(0 + (0 -0))) then v35=v1(v16,v18,v18);v18=v18 + (958 -(892 + (415 -(87 + 263)))) ;v34=2 -1 ;end if (v34==(1 -0)) then return v35;end end end local function v22() local v36=180 -(67 + 113) ;local v37;local v38;while true do if (v36==(1 + 0)) then return (v38 * ((1139 -511) -372)) + v37 ;end if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + (7 -(4 + 1)) );v18=v18 + (954 -((1799 -(915 + 82)) + 150)) ;v36=2 -1 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (11 -7) ;return (v42 * (9773502 + 7003714)) + (v41 * (86188 -20652)) + (v40 * 256) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1139 -(116 + 1022) ;local v46=(v20(v44,1188 -((4450 -3381) + 118) ,45 -25 ) * ((3 -1)^(6 + 26))) + v43 ;local v47=v20(v44,13 + 8 ,31);local v48=((v20(v44,(204 -148) -24 )==(1 + 0)) and  -(792 -(368 + 423))) or 1 ;if (v47==(0 -0)) then if (v46==(18 -(10 + 8))) then return v48 * 0 ;else local v89=0 -0 ;while true do if (v89==(442 -(416 + 26))) then v47=3 -2 ;v45=0 + 0 ;break;end end end elseif (v47==(3621 -1574)) then return ((v46==(438 -(145 + 293))) and (v48 * ((431 -(44 + 386))/(1486 -(998 + 488))))) or (v48 * NaN) ;end return v8(v48,v47-(325 + 698) ) * (v45 + (v46/((2 + (0 -0))^(824 -((1060 -(814 + 45)) + 571))))) ;end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(886 -(261 + 624)) );v18=v18 + v49 ;local v51={};for v65=1 + 0 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0 -0 ;while true do if (v67~=(0 -0)) then else if (v52==(374 -(123 + 251))) then local v96=0 -0 ;local v97;while true do if (v96==(698 -(208 + 490))) then v97=0;while true do if (v97~=(1 + 0)) then else v55={};v56={v53,v54,nil,v55};v97=2;end if (v97~=0) then else v53={};v54={};v97=1 + 0 ;end if (v97==(204 -(14 + 188))) then v52=1;break;end end break;end end end if (v52==2) then for v101=1,v23() do local v102=0;local v103;while true do if ((675 -(534 + 141))==v102) then v103=v21();if (v20(v103,1,1 + 0 )==(0 + 0)) then local v111=0;local v112;local v113;local v114;while true do if (v111==(0 + 0)) then local v127=0;local v128;while true do if (v127~=0) then else v128=0;while true do if (v128~=0) then else local v207=0 -0 ;while true do if (v207==0) then v112=v20(v103,2,3);v113=v20(v103,4,6);v207=1;end if (v207==1) then v128=1 -0 ;break;end end end if (v128~=1) then else v111=2 -1 ;break;end end break;end end end if (v111~=(1 + 0)) then else v114={v22(),v22(),nil,nil};if (v112==(0 + 0)) then local v182=0 -0 ;local v183;while true do if (0==v182) then v183=0;while true do if ((0 -0)==v183) then v114[870 -(550 + 317) ]=v22();v114[4]=v22();break;end end break;end end elseif (v112==1) then v114[3 -0 ]=v23();elseif (v112==(2 -0)) then v114[8 -5 ]=v23() -((287 -(134 + 151))^(1681 -(970 + 695))) ;elseif (v112~=(5 -2)) then else local v211=1990 -(582 + 1408) ;local v212;while true do if (v211==0) then v212=0 -0 ;while true do if (v212==(0 -0)) then v114[3]=v23() -(2^(60 -44)) ;v114[1828 -(1195 + 629) ]=v22();break;end end break;end end end v111=2 -0 ;end if (v111~=(243 -(187 + 54))) then else if (v20(v113,1,1)~=1) then else v114[782 -(162 + 618) ]=v58[v114[2]];end if (v20(v113,2,2)==1) then v114[3 + 0 ]=v58[v114[2 + 1 ]];end v111=3;end if (v111~=3) then else if (v20(v113,6 -3 ,3)~=1) then else v114[4]=v58[v114[4]];end v53[v101]=v114;break;end end end break;end end end for v104=1 -0 ,v23() do v54[v104-(1 + 0) ]=v28();end return v56;end v67=1;end if (v67==1) then if (v52~=(1637 -(1373 + 263))) then else v57=v23();v58={};for v106=1,v57 do local v107=0;local v108;local v109;local v110;while true do if (1==v107) then v110=nil;while true do if (v108~=0) then else local v115=1000 -(451 + 549) ;local v116;while true do if (v115~=0) then else v116=0 + 0 ;while true do if (v116==(1 -0)) then v108=1;break;end if ((0 -0)~=v116) then else v109=v21();v110=nil;v116=1385 -(746 + 638) ;end end break;end end end if (v108==(1 + 0)) then if (v109==(1 -0)) then v110=v21()~=0 ;elseif (v109==(343 -(218 + 123))) then v110=v24();elseif (v109==(1584 -(1535 + 46))) then v110=v25();end v58[v106]=v110;break;end end break;end if ((0 + 0)==v107) then v108=0 + 0 ;v109=nil;v107=561 -(306 + 254) ;end end end v56[1 + 2 ]=v21();v52=3 -1 ;end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v88=0;while true do if (v88==0) then v80=v68[v72];v81=v80[1];v88=1;end if (1==v88) then if (v81<=13) then if (v81<=6) then if (v81<=2) then if (v81<=0) then local v118=0;local v119;local v120;local v121;local v122;while true do if (2==v118) then for v190=v119,v73 do v122=v122 + 1 ;v78[v190]=v120[v122];end break;end if (v118==1) then v73=(v121 + v119) -1 ;v122=0;v118=2;end if (v118==0) then v119=v80[2];v120,v121=v71(v78[v119](v13(v78,v119 + 1 ,v80[3])));v118=1;end end elseif (v81==1) then local v130=0;local v131;while true do if (v130==0) then v131=v80[2];v78[v131]=v78[v131](v13(v78,v131 + 1 ,v73));break;end end else v78[v80[2]]={};end elseif (v81<=4) then if (v81>3) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v135=0;local v136;while true do if (0==v135) then v136=v80[2];v78[v136]=v78[v136](v13(v78,v136 + 1 ,v73));break;end end end elseif (v81>5) then v78[v80[2]]=v80[3];else local v139=v80[2];v78[v139]=v78[v139]();end elseif (v81<=9) then if (v81<=7) then do return;end elseif (v81>8) then v78[v80[2]]=v29(v69[v80[3]],nil,v61);else v78[v80[2]]=v29(v69[v80[3]],nil,v61);end elseif (v81<=11) then if (v81>10) then v78[v80[2]]={};else local v144=v80[2];v78[v144](v13(v78,v144 + 1 ,v80[3]));end elseif (v81==12) then local v145=v80[2];v78[v145]=v78[v145]();else v78[v80[2]]=v61[v80[3]];end elseif (v81<=20) then if (v81<=16) then if (v81<=14) then local v123=0;local v124;local v125;while true do if (v123==0) then v124=v80[2];v125=v78[v80[3]];v123=1;end if (v123==1) then v78[v124 + 1 ]=v125;v78[v124]=v125[v80[4]];break;end end elseif (v81==15) then local v149=0;local v150;local v151;while true do if (0==v149) then v150=v80[2];v151=v78[v80[3]];v149=1;end if (v149==1) then v78[v150 + 1 ]=v151;v78[v150]=v151[v80[4]];break;end end else local v152=0;local v153;while true do if (v152==0) then v153=v80[2];v78[v153]=v78[v153](v13(v78,v153 + 1 ,v80[3]));break;end end end elseif (v81<=18) then if (v81>17) then v78[v80[2]][v80[3]]=v80[4];else v78[v80[2]][v80[3]]=v80[4];end elseif (v81==19) then v78[v80[2]][v80[3]]=v78[v80[4]];else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=23) then if (v81<=21) then local v126=v80[2];v78[v126](v13(v78,v126 + 1 ,v80[3]));elseif (v81==22) then do return;end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=25) then if (v81>24) then v78[v80[2]]=v80[3];else local v166=v80[2];local v167,v168=v71(v78[v166](v13(v78,v166 + 1 ,v80[3])));v73=(v168 + v166) -1 ;local v169=0;for v180=v166,v73 do local v181=0;while true do if (v181==0) then v169=v169 + 1 ;v78[v180]=v167[v169];break;end end end end elseif (v81==26) then v78[v80[2]]=v61[v80[3]];else local v172=v80[2];v78[v172]=v78[v172](v13(v78,v172 + 1 ,v80[3]));end v72=v72 + 1 ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
