local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v89=v5(v83,v19);v19=nil;return v89;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-((879 -(282 + 595)) -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v84-(v84%(569 -(367 + 201))) ;else local v85=(929 -(214 + (2350 -(1523 + 114))))^(v32-1) ;return (((v31%(v85 + v85))>=v85) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=(0 + 0) -0 ;local v35;while true do if (v34==(1066 -(68 + 222 + 775))) then return v35;end if (v34==((2227 -(892 + 65)) -(226 + 1044))) then v35=v1(v16,v18,v18);v18=v18 + (4 -(7 -4)) ;v34=118 -(32 + 85) ;end end end local function v22() local v36=(0 -0) -0 ;local v37;local v38;while true do if (v36==(1 -0)) then return (v38 * (188 + 68)) + v37 ;end if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + 2 + 0 );v18=v18 + ((12 -5) -5) ;v36=351 -(87 + 263) ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + 3 + 1 ;return (v42 * 16777216) + (v41 * (66533 -(915 + 82))) + (v40 * (724 -468)) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1;local v46=(v20(v44,1,12 + 8 ) * ((2 -0)^((1649 -(44 + 386)) -(1069 + 118)))) + v43 ;local v47=v20(v44,47 -26 ,31);local v48=((v20(v44,69 -37 )==1) and  -((1487 -(998 + 488)) + 0)) or (1 -0) ;if (v47==(0 + 0 + 0)) then if (v46==(791 -(302 + 66 + 423))) then return v48 * (0 -0) ;else v47=19 -((782 -(201 + 571)) + 8) ;v45=0 -0 ;end elseif (v47==(2489 -((1554 -(116 + 1022)) + 26))) then return ((v46==(0 -0)) and (v48 * ((1 + 0)/((0 -0) -0)))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/(2^(490 -(145 + 293))))) ;end local function v25(v49) local v50;if  not v49 then local v86=0 + 0 ;while true do if (v86==(0 -(0 -0))) then v49=v23();if (v49==(0 -0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;local v51={};for v65=860 -(814 + 45) , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0 + 0 ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0;while true do if (1~=v67) then else if (v52==0) then local v96=0;while true do if (v96~=1) then else v55={};v56={v53,v54,nil,v55};v96=2;end if (v96==(1 + 1)) then v52=3 -2 ;break;end if (v96==(0 -0)) then v53={};v54={};v96=1;end end end break;end if (v67~=0) then else if (v52==1) then v57=v23();v58={};for v98=1,v57 do local v99=374 -(123 + 251) ;local v100;local v101;local v102;while true do if (v99==0) then v100=0;v101=nil;v99=1;end if (v99==(4 -3)) then v102=nil;while true do if (v100==1) then if (v101==(699 -(208 + 490))) then v102=v21()~=0 ;elseif (v101==(1 + 1)) then v102=v24();elseif (v101==3) then v102=v25();end v58[v98]=v102;break;end if (v100~=0) then else local v112=0 + 0 ;while true do if (v112==(837 -(660 + 176))) then v100=1 + 0 ;break;end if (0==v112) then v101=v21();v102=nil;v112=1;end end end end break;end end end v56[205 -(14 + 188) ]=v21();v52=2;end if (2~=v52) then else for v103=1,v23() do local v104=675 -(534 + 141) ;local v105;local v106;while true do if (v104==0) then local v109=0 + 0 ;local v110;while true do if (0~=v109) then else v110=0 + 0 ;while true do if (v110~=(0 + 0)) then else v105=0 -0 ;v106=nil;v110=1;end if (v110~=(1 -0)) then else v104=1;break;end end break;end end end if ((2 -1)~=v104) then else while true do if ((0 + 0)==v105) then v106=v21();if (v20(v106,1,1)~=(0 + 0)) then else local v113=396 -(115 + 281) ;local v114;local v115;local v116;while true do if (v113~=(2 -1)) then else local v201=0 + 0 ;while true do if (v201==(0 -0)) then v116={v22(),v22(),nil,nil};if (v114==0) then local v405=867 -(550 + 317) ;local v406;while true do if (v405==0) then v406=0;while true do if (v406==(0 -0)) then v116[3]=v22();v116[4 -0 ]=v22();break;end end break;end end elseif (v114==1) then v116[3]=v23();elseif (v114==(5 -3)) then v116[288 -(134 + 151) ]=v23() -(2^(1681 -(970 + 695))) ;elseif (v114==3) then local v442=0 -0 ;local v443;while true do if (0==v442) then v443=1990 -(582 + 1408) ;while true do if (v443~=0) then else v116[10 -7 ]=v23() -(2^(19 -3)) ;v116[15 -11 ]=v22();break;end end break;end end end v201=1825 -(1195 + 629) ;end if (v201~=(1 -0)) then else v113=243 -(187 + 54) ;break;end end end if (v113==0) then local v202=0;while true do if (v202==(780 -(162 + 618))) then v114=v20(v106,2 + 0 ,2 + 1 );v115=v20(v106,4,6);v202=1 -0 ;end if ((1 -0)==v202) then v113=1;break;end end end if ((1 + 1)==v113) then if (v20(v115,1,1)==1) then v116[2]=v58[v116[2]];end if (v20(v115,2,1638 -(1373 + 263) )==(1001 -(451 + 549))) then v116[1 + 2 ]=v58[v116[3]];end v113=4 -1 ;end if (v113~=3) then else if (v20(v115,3,4 -1 )~=1) then else v116[4]=v58[v116[1388 -(746 + 638) ]];end v53[v103]=v116;break;end end end break;end end break;end end end for v107=1,v23() do v54[v107-(1 + 0) ]=v28();end return v56;end v67=1 -0 ;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v88=0;while true do if (v88==1) then if (v81<=38) then if (v81<=18) then if (v81<=8) then if (v81<=3) then if (v81<=1) then if (v81>0) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v117=0;local v118;local v119;local v120;while true do if (v117==2) then if (v119>0) then if (v120<=v78[v118 + 1 ]) then v72=v80[3];v78[v118 + 3 ]=v120;end elseif (v120>=v78[v118 + 1 ]) then local v418=0;while true do if (v418==0) then v72=v80[3];v78[v118 + 3 ]=v120;break;end end end break;end if (v117==1) then v120=v78[v118] + v119 ;v78[v118]=v120;v117=2;end if (v117==0) then v118=v80[2];v119=v78[v118 + 2 ];v117=1;end end end elseif (v81==2) then v72=v80[3];elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=5) then if (v81==4) then v72=v80[3];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=6) then local v123=v80[2];local v124={v78[v123](v13(v78,v123 + 1 ,v73))};local v125=0;for v204=v123,v80[4] do local v205=0;while true do if (v205==0) then v125=v125 + 1 ;v78[v204]=v124[v125];break;end end end elseif (v81==7) then local v218=v80[2];local v219=v80[4];local v220=v218 + 2 ;local v221={v78[v218](v78[v218 + 1 ],v78[v220])};for v304=1,v219 do v78[v220 + v304 ]=v221[v304];end local v222=v221[1];if v222 then v78[v220]=v222;v72=v80[3];else v72=v72 + 1 ;end else local v223=v80[2];v78[v223](v13(v78,v223 + 1 ,v80[3]));end elseif (v81<=13) then if (v81<=10) then if (v81==9) then v78[v80[2]]=v80[3];else v78[v80[2]]={};end elseif (v81<=11) then do return;end elseif (v81==12) then local v224=v78[v80[4]];if  not v224 then v72=v72 + 1 ;else v78[v80[2]]=v224;v72=v80[3];end else local v225=v80[2];v78[v225]=v78[v225](v13(v78,v225 + 1 ,v73));end elseif (v81<=15) then if (v81>14) then local v129=v80[2];v78[v129]=v78[v129]();else local v131=v78[v80[4]];if  not v131 then v72=v72 + 1 ;else local v227=0;while true do if (v227==0) then v78[v80[2]]=v131;v72=v80[3];break;end end end end elseif (v81<=16) then v78[v80[2]]=v80[3]~=0 ;v72=v72 + 1 ;elseif (v81>17) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v228=0;local v229;local v230;local v231;while true do if (v228==1) then v231=0;for v407=v229,v80[4] do v231=v231 + 1 ;v78[v407]=v230[v231];end break;end if (v228==0) then v229=v80[2];v230={v78[v229](v13(v78,v229 + 1 ,v73))};v228=1;end end end elseif (v81<=28) then if (v81<=23) then if (v81<=20) then if (v81==19) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v133=0;local v134;local v135;local v136;while true do if (v133==0) then v134=v80[2];v135=v78[v134];v133=1;end if (v133==1) then v136=v78[v134 + 2 ];if (v136>0) then if (v135>v78[v134 + 1 ]) then v72=v80[3];else v78[v134 + 3 ]=v135;end elseif (v135<v78[v134 + 1 ]) then v72=v80[3];else v78[v134 + 3 ]=v135;end break;end end end elseif (v81<=21) then v78[v80[2]]=v61[v80[3]];elseif (v81>22) then local v233=0;local v234;local v235;local v236;while true do if (v233==1) then v236=v80[3];for v410=1,v236 do v235[v410]=v78[v234 + v410 ];end break;end if (v233==0) then v234=v80[2];v235=v78[v234];v233=1;end end else local v237=v69[v80[3]];local v238;local v239={};v238=v10({},{__index=function(v310,v311) local v312=v239[v311];return v312[1][v312[2]];end,__newindex=function(v313,v314,v315) local v316=v239[v314];v316[1][v316[2]]=v315;end});for v318=1,v80[4] do v72=v72 + 1 ;local v319=v68[v72];if (v319[1]==62) then v239[v318-1 ]={v78,v319[3]};else v239[v318-1 ]={v60,v319[3]};end v77[ #v77 + 1 ]=v239;end v78[v80[2]]=v29(v237,v238,v61);end elseif (v81<=25) then if (v81>24) then v78[v80[2]]=v29(v69[v80[3]],nil,v61);else v60[v80[3]]=v78[v80[2]];end elseif (v81<=26) then local v142=v80[2];local v143=v78[v142];local v144=v78[v142 + 2 ];if (v144>0) then if (v143>v78[v142 + 1 ]) then v72=v80[3];else v78[v142 + 3 ]=v143;end elseif (v143<v78[v142 + 1 ]) then v72=v80[3];else v78[v142 + 3 ]=v143;end elseif (v81>27) then if (v78[v80[2]]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else do return;end end elseif (v81<=33) then if (v81<=30) then if (v81>29) then local v145=0;local v146;local v147;local v148;while true do if (v145==1) then v148=0;for v375=v146,v80[4] do v148=v148 + 1 ;v78[v375]=v147[v148];end break;end if (v145==0) then v146=v80[2];v147={v78[v146](v78[v146 + 1 ])};v145=1;end end else local v149=v80[2];local v150={};for v206=1, #v77 do local v207=0;local v208;while true do if (0==v207) then v208=v77[v206];for v396=0, #v208 do local v397=v208[v396];local v398=v397[1];local v399=v397[2];if ((v398==v78) and (v399>=v149)) then v150[v399]=v398[v399];v397[1]=v150;end end break;end end end end elseif (v81<=31) then v78[v80[2]]=v80[3];elseif (v81==32) then v60[v80[3]]=v78[v80[2]];else local v243=v69[v80[3]];local v244;local v245={};v244=v10({},{__index=function(v322,v323) local v324=0;local v325;while true do if (v324==0) then v325=v245[v323];return v325[1][v325[2]];end end end,__newindex=function(v326,v327,v328) local v329=v245[v327];v329[1][v329[2]]=v328;end});for v331=1,v80[4] do v72=v72 + 1 ;local v332=v68[v72];if (v332[1]==62) then v245[v331-1 ]={v78,v332[3]};else v245[v331-1 ]={v60,v332[3]};end v77[ #v77 + 1 ]=v245;end v78[v80[2]]=v29(v243,v244,v61);end elseif (v81<=35) then if (v81==34) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]]=v80[3]~=0 ;v72=v72 + 1 ;end elseif (v81<=36) then v78[v80[2]]=v60[v80[3]];elseif (v81==37) then local v247=v80[2];v78[v247]=v78[v247]();else v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;end elseif (v81<=58) then if (v81<=48) then if (v81<=43) then if (v81<=40) then if (v81==39) then v78[v80[2]]=v61[v80[3]];else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=41) then local v162=v80[2];v78[v162](v78[v162 + 1 ]);elseif (v81==42) then local v250=v80[2];local v251,v252=v71(v78[v250](v13(v78,v250 + 1 ,v80[3])));v73=(v252 + v250) -1 ;local v253=0;for v334=v250,v73 do v253=v253 + 1 ;v78[v334]=v251[v253];end else local v254=v80[2];local v255,v256=v71(v78[v254](v78[v254 + 1 ]));v73=(v256 + v254) -1 ;local v257=0;for v337=v254,v73 do local v338=0;while true do if (v338==0) then v257=v257 + 1 ;v78[v337]=v255[v257];break;end end end end elseif (v81<=45) then if (v81==44) then v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;else local v164=0;local v165;local v166;local v167;while true do if (v164==2) then if (v166>0) then if (v167<=v78[v165 + 1 ]) then v72=v80[3];v78[v165 + 3 ]=v167;end elseif (v167>=v78[v165 + 1 ]) then local v428=0;while true do if (v428==0) then v72=v80[3];v78[v165 + 3 ]=v167;break;end end end break;end if (v164==1) then v167=v78[v165] + v166 ;v78[v165]=v167;v164=2;end if (v164==0) then v165=v80[2];v166=v78[v165 + 2 ];v164=1;end end end elseif (v81<=46) then local v168=v80[2];v78[v168]=v78[v168](v78[v168 + 1 ]);elseif (v81>47) then local v258=v80[2];local v259=v78[v80[3]];v78[v258 + 1 ]=v259;v78[v258]=v259[v80[4]];else local v263=v80[2];local v264,v265=v71(v78[v263](v78[v263 + 1 ]));v73=(v265 + v263) -1 ;local v266=0;for v342=v263,v73 do v266=v266 + 1 ;v78[v342]=v264[v266];end end elseif (v81<=53) then if (v81<=50) then if (v81>49) then local v170=0;local v171;local v172;local v173;local v174;while true do if (v170==0) then v171=v80[2];v172,v173=v71(v78[v171](v13(v78,v171 + 1 ,v80[3])));v170=1;end if (1==v170) then v73=(v173 + v171) -1 ;v174=0;v170=2;end if (2==v170) then for v379=v171,v73 do local v380=0;while true do if (v380==0) then v174=v174 + 1 ;v78[v379]=v172[v174];break;end end end break;end end else local v175=v80[2];v78[v175]=v78[v175](v13(v78,v175 + 1 ,v80[3]));end elseif (v81<=51) then v78[v80[2]]=v29(v69[v80[3]],nil,v61);elseif (v81==52) then v78[v80[2]][v80[3]]=v80[4];else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=55) then if (v81==54) then local v178=v80[2];v78[v178](v78[v178 + 1 ]);else for v209=v80[2],v80[3] do v78[v209]=nil;end end elseif (v81<=56) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81>57) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else local v270=v80[2];v78[v270]=v78[v270](v13(v78,v270 + 1 ,v80[3]));end elseif (v81<=68) then if (v81<=63) then if (v81<=60) then if (v81>59) then v78[v80[2]]=v78[v80[3]];elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=61) then local v183=v80[2];local v184={v78[v183](v78[v183 + 1 ])};local v185=0;for v211=v183,v80[4] do local v212=0;while true do if (v212==0) then v185=v185 + 1 ;v78[v211]=v184[v185];break;end end end elseif (v81>62) then local v273=v80[2];v78[v273]=v78[v273](v78[v273 + 1 ]);else v78[v80[2]]=v78[v80[3]];end elseif (v81<=65) then if (v81>64) then local v186=0;local v187;while true do if (v186==0) then v187=v80[2];v78[v187]=v78[v187](v13(v78,v187 + 1 ,v73));break;end end else local v188=0;local v189;local v190;while true do if (v188==1) then v78[v189 + 1 ]=v190;v78[v189]=v190[v80[4]];break;end if (v188==0) then v189=v80[2];v190=v78[v80[3]];v188=1;end end end elseif (v81<=66) then local v191=v80[2];v78[v191](v13(v78,v191 + 1 ,v80[3]));elseif (v81>67) then v78[v80[2]][v80[3]]=v80[4];else local v279=v80[2];local v280=v80[4];local v281=v279 + 2 ;local v282={v78[v279](v78[v279 + 1 ],v78[v281])};for v353=1,v280 do v78[v281 + v353 ]=v282[v353];end local v283=v282[1];if v283 then v78[v281]=v283;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81<=73) then if (v81<=70) then if (v81==69) then v78[v80[2]]=v80[3]~=0 ;else v78[v80[2]]=v60[v80[3]];end elseif (v81<=71) then v78[v80[2]]={};elseif (v81>72) then for v356=v80[2],v80[3] do v78[v356]=nil;end elseif (v78[v80[2]]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=75) then if (v81==74) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v196=v80[2];local v197={};for v213=1, #v77 do local v214=v77[v213];for v285=0, #v214 do local v286=0;local v287;local v288;local v289;while true do if (v286==1) then v289=v287[2];if ((v288==v78) and (v289>=v196)) then v197[v289]=v288[v289];v287[1]=v197;end break;end if (v286==0) then v287=v214[v285];v288=v287[1];v286=1;end end end end end elseif (v81<=76) then local v198=0;local v199;local v200;while true do if (v198==0) then v199=v80[2];v200=v78[v199];v198=1;end if (v198==1) then for v387=v199 + 1 ,v80[3] do v7(v200,v78[v387]);end break;end end elseif (v81==77) then local v290=v80[2];local v291=v78[v290];local v292=v80[3];for v360=1,v292 do v291[v360]=v78[v290 + v360 ];end else v78[v80[2]]=v78[v80[3]][v80[4]];end v72=v72 + 1 ;break;end if (0==v88) then v80=v68[v72];v81=v80[1];v88=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
